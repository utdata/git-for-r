# About this book {.unnumbered}

::: callout-note
**This work is under constant revision**. It is written using [Quarto](https://quarto.org/docs/guide/) and the source is available on [Github](https://github.com/utdata/git-for-r).


This version is being revised for fall 2025.

:::

Intro to Terminal and Git for R is a series of lessons and instructions used for courses in the School of Journalism and Media, Moody College of Communication at the University of Texas at Austin. This book is the brainchild of Associate Professor of Practice [Christian McDonald](https://moody.utexas.edu/faculty/christian-mcdonald), but has primarily been written by Anastasia Goodwin. 

## Some words from the authors {.unnumbered}

There is always more than one way to do things in coding. This book is a an opinionated collection of lessons intended to teach students new to programming how to get started using the command line and version control. We consider our audiences beginners, and strive to make steps as simple as possible, which means I may not go into detail about alternative (and possibly better) ways to accomplish tasks in favor of reducing options to simplify understanding. There are a multitude of other resources available to students once they advance beyond the materials in this book, and we strongly encourage Googling concepts for further learning. For our purposes, we stick to the basics in hopes it eliminates enough of the noise for our students to get their feet on the ground using these technologies. 

## Conventions and styles in this book {.unnumbered}

We hold the deep belief that "all ships rise with the tide" when members of the data journalism community learn together, and this book seeks to add to that mission. We've written this textbook in the *first-person plural* to foster a sense of collaboration and shared learning between the reader and the authors. By using pronouns like “we” and “our,” our guide invites students into a learning journey that feels supportive and inclusive, rather than distant or instructional. It reflects the idea that learning to code is not a solitary task, but a process that many people engage in together. Our aim for this guide is to help beginners feel less intimidated, encouraging them to see mistakes and discoveries as part of a shared experience, not personal failures. 

We will try to be consistent in the way we write documentation and lessons, but we are human and sometimes we break my own rules. In general, keep the following in mind:

### Things to do {.unnumbered}

Things to DO are in ordered lists:

1.  Do this thing.
2.  Then do this thing.

Explanations are usually in text, like this very paragraph.

Sometimes details will be explained in lists:

-   This is the first thing I want you to know.
-   This is the second. You don't have to DO these things, just know about them.

### Code blocks {.unnumbered}

This book often runs the code that is shown, so you'll see the code and the result of that code below it.

```{r}
1 + 1
```

#### Copying code blocks

When you see code in the instructions, you can roll your cursor over the right-corner and **click on the copy icon** to copy the code clock content to your clipboard.

![](images/index-copy-clipboard.png) 

You can then paste the code inside your coding program chunk.

That said, typing code yourself has many, many benefits. You learn better when you type yourself, make mistakes and have to fix them. **I encourage you to always type short code snippets.** Leave the copying to long ones.

#### Hidden code

Sometimes I want to include code in the book but not display it so you can try the to write the code yourself first. When I do this, it will look like this:

```{r}
#| code-fold: true
#| code-summary: "Click here to show the code"
1 + 1
```

If you click on the triangle or the words that follow, you'll reveal the code. Click again to hide it.

#### Annotated code

Sometimes when I am explaining code it is helpful to match lines of code to the explanation about them, which I do through annotated code.

```{r}
mtcars |> # <1>
  head() # <2>
```

1. First I take the Motor Trend Car Road Tests data set AND THEN ...
2. I pipe into the head() command, which gives us the "top" of the data.

When there are annotations like this you have to be careful if you are copying code from the book. Either copy it one line at a time or use the copy icon noted above.

#### Fenced code

Sometimes I need to show code chunk options that are added, like when explaining how to name chunks. In those cases, you may see the code chunk with all the tick marks, etc. like this:

```{r block-named}
#| echo: fenced
1 + 1
```

or

```{r}
#| echo: fenced
#| label: block-named-yaml

1 + 1

```

You can still copy/paste these blocks, but you'll get the entire code block, not just the contents.

### Notes, some important {.unnumbered}

I will use callouts to set off a less important aside:

::: callout
Markdown was developed by JOHN GRUBER, as outlined on his [Daring Fireball blog](https://daringfireball.net/projects/markdown/).
:::

But sometimes those asides are important. I usually indicate that:

::: callout-important
You really should learn how to use [Markdown](https://rmarkdown.rstudio.com/) as you will use it the whole semester, and hopefully for the rest of your life.
:::

## About the authors {.unnumbered}

### Anastasia Goodwin

I am a former web developer and UX/UI designer turned data journalist. I work as a senior data journalist embedded with the Houston Chronicle's education team where I cover everything from pre-K to higher education. I also sometimes have the privilege to teach sections of Reporting with Data at the University of Texas at Austin, where I also attended journalism school.

-   Email: [ana.goodwin10@gmail.com](mailto:ana.goodwin10@gmail.com){.email}

### Christian McDonald {.unnumbered}

I'm a career journalist who most recently served as data and projects editor at the Austin American-Statesman before joining the University of Texas at Austin faculty full-time in fall 2018. I've taught data-related course at UT since 2013. I also serve as the innovation director of the [Dallas Morning News Journalism Innovation Endowment](https://journalism.utexas.edu/innovation).

-   The UT Data Github: [utdata](https://github.com/utdata)
-   Threads: [@critmcdonald](https://www.threads.net/@critmcdonald) \| Mastodon [crit](https://newsie.social/@crit) \| Bluesky: @crit
-   Email: [christian.mcdonald\@utexas.edu](mailto:christian.mcdonald@utexas.edu){.email}

## License {.unnumbered}

<a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/4.0/"><img src="https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png" alt="Creative Commons License" style="border-width:0"/></a><br /><br />This work is licensed under a <a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/4.0/">Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License</a>.

Let's just say this is free on the internet. I don't make any money from it and you shouldn't either.

