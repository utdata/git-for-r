---
editor: 
  markdown: 
    wrap: 72
---

# Pushing to Github

> ðŸŽ¯ Goal: By the end of this chapter, youâ€™ll know how to connect your
> Git project to Github and push your first commit.

Now that your project has been committed locally, letâ€™s put it on GitHub
so you can back it up and collaborate with others.

## Step 1: Create a Repository on GitHub

1.  Go to [github.com](https://github.com) and log in.

2.  Click the **+** in the upper right corner â†’ choose **"New
    repository"**.

3.  Complete the form by doing the following:

    -   Fill in the **Repository name** field, using the same name as
        your project folder (e.g. `my-quarto-project`)

    -   Leave **Description** blank or optional

    -   Leave the box **unchecked** that says "Initialize this
        repository with a README" (We'll add this on our own later)

    -   Click **Create repository**

Youâ€™ll now see a page with instructions on how to connect your local
folder to this GitHub repository.

------------------------------------------------------------------------

## Step 2: Connect Your Local Git Project to GitHub

In the `Quick setup â€” if youâ€™ve done this kind of thing before` box,
click the copy button next to the SSH URL box.

Navigate to the `Terminal` tab inside your RStudio Quarto project, type
the following command but replace the repo name with the one you just
copied from Github:

``` bash
git remote add origin git@github.com:your-name/your-repo-name.git
```

Now run the command by hitting `enter`.

Now we'll set our main branch name to `main` by running:

``` bash
git branch -M main
```

Lastly, we'll push our main branch to Github by running:

``` bash
git push -u origin main
```

## Recap: What Do These Commands Do?

Ok, we just did a lot there. Let's pause for a moment and breakdown
everything we just did:

-   `git remote add origin ...`: Tells Git where your online repository
    lives (on GitHub).
-   `git branch -M main`: Renames your current branch to `main`
    (standard practice on GitHub).
-   `git push -u origin main`: Uploads your local commits to GitHub and
    sets up a link between your local `main` branch and the `main`
    branch on GitHub.

------------------------------------------------------------------------

ðŸŽ‰ Congratulations: Now your project is on GitHub!

## ðŸŽ¯ Exercise 3: Explore Your GitHub Project

Go to your repository page on GitHub. You should see all your project
files, including `.qmd`, `.gitignore`, etc.

âœ… Your project is now tracked by Git and backed up on GitHub.

Pay attention to what's showing in the file list. You'll see some
helpful information about the project.

Including:

1.  Which user made the most recent commit

2.  The commit message

3.  The commit number

4.  The timestamp of the commit In the file list

5.  The commit message and timestamp from the most recent update made to
    each file or folder.

::: callout-note
Not every file will update with each git push. Git only keeps track of
*changes* to files. If you made no edits to a file in a commit, it won't change. Timestamps will help you track when updates were last made different parts of your project!
:::

------------------------------------------------------------------------

## Checkin point.

At this point in the guide, you've learned how to:

-   Create a new RStudio project

-   Turn on Git tracking with `git init`

-   Stage and commit changes

-   Connect the project to GitHub

-   Push your first commit

Next up: weâ€™ll learn how to **make changes**, **track versions**, and
**collaborate** like pros.
