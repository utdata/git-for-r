---
title: "Moving Around in the Terminal"
---

Now that you know where you *are* (`pwd`), it's time to explore what's *around* you. Specifically, we'll start by moving between different folders on your computer.

::: callout-note
## Terminology note

In the Terminal world, folders are usually called **directories**. (You‚Äôll hear both words out in the world ‚Äî they mean the same thing.)
:::

------------------------------------------------------------------------

## What‚Äôs in This Folder? (`ls`)

If you want to *see* what's inside the current directory, you use the `ls` command.

As we said in Chapter 1, the Terminal lets you interact with files the same way you would with **File Explorer** on Windows and **Finder** on a Mac ‚Äî except you'll be using text instead of clicking.

When your first launch terminal, you'll see a `~` (called a tilde), which lets you know you're in your base or home directory. We want to ask the Terminal to tell us what is inside this home directory.

To do that, type the following command:

``` bash
ls
```

and press `Enter` to run the command.

Terminal will *respond* to your command with a list of files and folders like this:

```         
_projects Desktop       Downloads   Movies      Pictures
Documents   Library     Music       Public 
```

Or it might be different depending on what's in your computer's home folder.

In any case, the list of directories returned by Terminal will match the folders you would see if you clicked on your home directory in the Finder on a Mac or in File Explorer on a Windows machine. For example, the list of folders listed in the example response above matches what we see in our home directory using Finder below.

![An example of folders in a home directory on a Mac.](../images/home-directory.png)**Quick Recap: What does `ls` stand for?**

-   It‚Äôs short for "**list**."

-   It literally says, "List what‚Äôs here."

------------------------------------------------------------------------

## Moving Around (`cd`)

Seeing what's around is nice ‚Äî but what if you want to *go into* one of those folders?

Use the `cd` command, shorthand for "change directory".

Suppose you see a folder called `Documents`.

To do so, type the following command in your Terminal:

``` bash
cd Documents
```

and press `Enter`.

Now you‚Äôre inside the `Documents` directory!

------------------------------------------------------------------------

## How Can You Tell Where You Are Now? (`pwd`)

There are a couple ways to make sure you are where you *think* you are in the Terminal.

The first is to look at the command prompt line inside your Terminal window again. You should see something like:

`Anas-MacBook-Air:Documents ana$`

In the current directory space (where there used to be a `~`), you should now see the name of the `Documents` folder. Remember if you're ever unsure *where* you are, Terminal will tell you in the prompt!

If you're still not sure, remember you can use your new friend the `pwd` command from Chapter 1 by typing:

``` bash
pwd
```

Terminal should now show something like:

`/Users/yourname/Documents`

or

`C:\Users\yourname\Documents`

Nice job ‚Äî you just moved between directories!

Now let's try sending the `ls` command again by typing:

``` bash
ls
```

and hitting `Enter`.

You should see a different list of files and/or folder names that you did when you ran the same command inside the home directory ‚Äî now showing the contents of your `Documents` folder.

------------------------------------------------------------------------

## Going Back Up (`cd ..`)

Ok now that we've moved *into* folders, what if you want to go *back* to the folder you came from?

To go back up, type and run the following command:

``` bash
cd ..
```

The two dots `..` simply mean "the folder above this one."

If you run the `pwd` command again, you'll see you're back to where you started!

------------------------------------------------------------------------

## Extra: Special Shortcuts

Here are a few handy shortcuts you'll want to remember:

| Command         | What it does                        |
|-----------------|-------------------------------------|
| `cd`            | Go back to your **home** directory. |
| `cd ..`         | Move **up one** directory.          |
| `cd foldername` | Move **into** a folder.             |

> **Tip:** If the folder name has spaces (like `My Documents`), put it in quotes:
>
> `cd "My Documents"`

Or use a backslash to "escape" the space:

`cd My\ Documents`

Like we mentioned before, Terminal is particular about the *way* you speak to it. For it to understand you, you've got to speak its language. But this is another reason why naming your files and directories cleanly using a naming convention like `snake_case` or `kebab-case` will help you work more efficiently. 

------------------------------------------------------------------------

## üìù Mini Exercise

**Own your own, try this:**

1.  Open your Terminal.

2.  Type `pwd` to see where you are.

3.  Use `ls` to list what's inside.

4.  Pick a folder you see (not your Documents folder).

5.  `cd` into that folder.

6.  Use `pwd` again to check that you moved.

7.  `cd ..` to come back up.

Take your time. Play around.\
If you get lost, just type:

``` bash 
cd
```

to jump back to your home directory.

------------------------------------------------------------------------

## üî• Pro Tip: Speed Up with Tab Completion

Ok, now that you've got some practice typing things into Terminal, we'll let you in on a big time-saver: when you start typing a folder name, you don't have to type the whole thing.

Hit the `Tab` key after typing part of your folder name and the Terminal will *try* to **auto-complete** it for you.

See it for yourself by typing:

```bash
cd Doc
``` 
then press `Tab`.

-   If there‚Äôs a `Documents` folder, Terminal will fill in the rest automatically!

Huge time saver.

Remember, you'll still need to hit Enter to run the command and move into the Documents folder though.

------------------------------------------------------------------------

## üéØ Checkpoint

In this chapter you've learned:

-   How to see what‚Äôs inside a folder (`ls`)

-   How to move into a folder (`cd foldername`)

-   How to move back up (`cd ..`)

-   How to use `Tab` to speed things up

At this point you've started to learn some of the basics of "speaking" Bash. 

**Next up:**

We'll learn how to create your own files and folders in the Terminal.

------------------------------------------------------------------------
